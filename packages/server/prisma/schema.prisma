generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DB_URL")
}

model User {
  userId         String          @id @map("user_id") @db.Uuid
  joinedDate     DateTime?       @map("joined_date") @db.Timestamp(6)
  firstName      String          @map("first_name") @db.VarChar(50)
  lastName       String          @map("last_name") @db.VarChar(50)
  isNew          Boolean         @default(true) @map("is_new")
  email          String          @unique @db.VarChar(255)
  avatar         String?         @db.VarChar(255)
  password       String?         @db.VarChar(255)
  eventAttendees EventAttendee[]
  guildMembers   GuildMember[]

  @@map("users")
}

model EventAttendee {
  userId   String @map("user_id") @db.Uuid
  eventId  String @map("event_id") @db.Uuid
  event    Event? @relation(fields: [eventId], references: [eventId], onDelete: Cascade, onUpdate: NoAction, map: "fk_event")
  attendee User?  @relation(fields: [userId], references: [userId], onDelete: Cascade, onUpdate: NoAction, map: "fk_user")

  @@id([userId, eventId])
  @@map("event_attendees")
}

model Event {
  eventId        String          @id(map: "event_pkey") @map("event_id") @db.Uuid
  guildId        String          @map("guild_id") @db.Uuid
  title          String          @db.VarChar(255)
  description    String?         @db.VarChar(255)
  startDate      DateTime?       @map("start_date") @db.Timestamp(6)
  endDate        DateTime?       @map("end_date") @db.Timestamp(6)
  location       String?         @db.VarChar(255)
  thumbnail      String?         @db.VarChar(255)
  eventAttendees EventAttendee[]
  guilds         Guild           @relation(fields: [guildId], references: [guildId], onDelete: Cascade, onUpdate: Cascade, map: "event_guild_id_fkey")

  @@map("events")
}

model GuildMember {
  userId  String @map("user_id") @db.Uuid
  guildId String @map("guild_id") @db.Uuid
  guilds  Guild  @relation(fields: [guildId], references: [guildId], onDelete: Cascade, onUpdate: NoAction, map: "fk_guild")
  members User   @relation(fields: [userId], references: [userId], onDelete: Cascade, onUpdate: NoAction, map: "fk_user")

  @@id([guildId, userId], map: "users_guilds_pkey")
  @@map("guild_members")
}

model Guild {
  guildId      String        @id(map: "guild_pkey") @map("guild_id") @db.Uuid
  name         String        @db.VarChar(100)
  handler      String        @db.VarChar(50)
  description  String
  category     String        @db.VarChar(255)
  location     String?       @db.VarChar(255)
  website      String?       @db.VarChar(255)
  tags         String[]
  banner       String?       @db.VarChar(255)
  icon         String?       @db.VarChar(255)
  media        String[]
  isInviteOnly Boolean       @map("invite_only")
  events       Event[]
  members      GuildMember[]

  @@map("guilds")
}
